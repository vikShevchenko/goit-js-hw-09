{"mappings":"CAAa,CACXA,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAC3B,SAAqBC,GACnBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,cAAcC,MAAMC,OAC3C,MAAMC,EAAOJ,OAAOH,EAAII,cAAcG,KAAKD,OACrCE,EAASL,OAAOH,EAAII,cAAcK,OAAOH,QAI/C,SAAsBG,GACpB,IAAK,IAAIC,EAAM,EAAGA,GAAOD,EAAQC,GAAO,EAAG,CACzC,SAASC,EAAcC,EAAUP,GACTQ,KAAKC,SAEZ,IAAIC,SAAQ,CAACC,EAASC,KACnC,MAAMC,EAAgBL,KAAKC,SAAW,GAEtCK,YAAW,KACLD,EACFF,EAAQ,WAEDC,EAAA,UAAiB,GAEzBZ,EAAM,IAIRe,MAAKC,GACJC,QAAQC,IAAI,uBAAqBX,QAAiBP,SAAYmB,OAE1DC,GAAUH,QACdC,IAAQ,sBAAKX,QAA8BP,Q,CAGjDM,EAAcD,EAAKR,GAEnBA,GAASK,C,EAGbmB,CAAalB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onBtnSubmit);\nfunction onBtnSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(evt.currentTarget.delay.value);\n  const step = Number(evt.currentTarget.step.value);\n  const amount = Number(evt.currentTarget.amount.value);\n\n  const position = 0;\n\n  function generateProm(amount) {\n    for (let pos = 1; pos <= amount; pos += 1) {\n      function createPromise(position, delay) {\n        const shouldResolve = Math.random() > 0.3;\n\n        const myProm = new Promise((resolve, reject) => {\n          const shouldResolve = Math.random() > 0.3;\n\n          setTimeout(() => {\n            if (shouldResolve) {\n              resolve('Успішно');\n            } else {\n              reject('Невдало');\n            }\n          }, delay);\n        });\n\n        myProm\n          .then(succsess =>\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n          )\n          .catch(promError =>\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n          );\n      }\n      createPromise(pos, delay);\n\n      delay += step;\n    }\n  }\n  generateProm(amount);\n}\n"],"names":["form","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","delay","value","step","amount1","amount","pos","createPromise","position","Math","random","Promise","resolve","reject","shouldResolve","setTimeout","then","succsess","console","log","catch","promError","generateProm"],"version":3,"file":"03-promises.4fa565ee.js.map"}